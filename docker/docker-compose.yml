version: '3.8'

services:
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - microservices-network

  user-service:
    build:
      context: ..
      dockerfile: docker/Dockerfile.user-service
    ports:
      - "8081:8081"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017
      - MONGODB_DATABASE=user_service
      - SERVER_PORT=:8081
      - JWT_SECRET=your-secret-key
    depends_on:
      - mongodb
    networks:
      - microservices-network

  product-service:
    build:
      context: ..
      dockerfile: docker/Dockerfile.product-service
    ports:
      - "8082:8082"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017
      - MONGODB_DATABASE=product_service
      - SERVER_PORT=:8082
      - JWT_SECRET=your-secret-key
    depends_on:
      - mongodb
    networks:
      - microservices-network

  shop-service:
    build:
      context: ..
      dockerfile: docker/Dockerfile.shop-service
    ports:
      - "8083:8083"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017
      - MONGODB_DATABASE=shop_service
      - SERVER_PORT=:8083
      - JWT_SECRET=your-secret-key
    depends_on:
      - mongodb
    networks:
      - microservices-network

  order-service:
    build:
      context: ..
      dockerfile: docker/Dockerfile.order-service
    ports:
      - "8084:8084"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017
      - MONGODB_DATABASE=order_service
      - SERVER_PORT=:8084
      - JWT_SECRET=your-secret-key
      - PRODUCT_SERVICE_URL=http://product-service:8082
      - SHOP_SERVICE_URL=http://shop-service:8083
    depends_on:
      - mongodb
      - product-service
      - shop-service
    networks:
      - microservices-network
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - microservices-network

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - microservices-network

  warehouse-service:
    build:
      context: ..
      dockerfile: docker/Dockerfile.warehouse-service
    ports:
      - "8084:8084"
      - "9090:9090"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017
      - MONGODB_DATABASE=warehouse_service
      - SERVER_PORT=8084
      - JWT_SECRET=your-secret-key
    depends_on:
      - mongodb
    networks:
      - microservices-network
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:

networks:
  microservices-network:
    driver: bridge 